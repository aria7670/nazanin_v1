# pyproject.toml - Modern Python project configuration

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nazanin-ai-bot"
version = "2.0.0"
description = "Advanced Modular AI Bot with Brain Simulation, Quantum & Neural Agents"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Aria Pourshajaie", email = "aria7670@gmail.com"}
]
keywords = [
    "ai", "bot", "telegram", "twitter", "brain-simulation",
    "quantum", "neural-network", "automation", "persian"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Communications :: Chat",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "asyncio",
    "telethon>=1.28",
    "tweepy>=4.14",
    "google-auth>=2.23",
    "google-api-python-client>=2.95",
    "gspread>=5.10",
    "aiohttp>=3.8",
    "python-dotenv>=1.0.0",
    "anthropic>=0.25.0",
    "openai>=1.30.0",
    "google-generativeai>=0.5.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",
    "qiskit>=0.43.0",
    "qiskit-aer>=0.12.0",
    "pennylane>=0.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.7.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/aria7670/nazanin_v1"
Documentation = "https://github.com/aria7670/nazanin_v1/tree/main/docs"
Repository = "https://github.com/aria7670/nazanin_v1"
Issues = "https://github.com/aria7670/nazanin_v1/issues"
Changelog = "https://github.com/aria7670/nazanin_v1/blob/main/CHANGELOG.md"

[project.scripts]
nazanin = "main:main"
nazanin-advanced = "main_advanced:main"

[tool.setuptools]
packages = ["src", "src.core", "src.ai", "src.agents", "src.platforms", "src.utils", "src.storage"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.md"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
